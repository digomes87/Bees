[tool:pytest]
# Pytest configuration for Bee Migration Analysis Project

# Test discovery
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Test directories
testpaths = tests

# Minimum version
minversion = 7.0

# Add options
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=src
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml
    --cov-fail-under=80
    --durations=10
    --color=yes
    -ra

# Markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    api: marks tests that require API access
    data: marks tests that require data files
    ml: marks tests for machine learning components
    viz: marks tests for visualization components
    geo: marks tests for geospatial analysis
    climate: marks tests for climate data analysis
    migration: marks tests for migration analysis
    performance: marks tests for performance benchmarks

# Warnings
filterwarnings =
    error
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::FutureWarning
    ignore:.*GDAL.*:RuntimeWarning
    ignore:.*shapely.*:RuntimeWarning
    ignore:.*geopandas.*:UserWarning

# Test output
console_output_style = progress
junit_family = xunit2

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Coverage
cov_config = .coveragerc

# Timeout (in seconds)
timeout = 300
timeout_method = thread

# Parallel execution
# Uncomment to enable parallel test execution
# -n auto
# --dist worksteal

# Cache
cache_dir = .pytest_cache

# Doctest
doctest_optionflags = NORMALIZE_WHITESPACE IGNORE_EXCEPTION_DETAIL